basePath: /
definitions:
  services.CreateRequestBody:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Swagger Example API
  version: "2.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /api/user/:
    post:
      consumes:
      - application/json
      description: Create user.
      operationId: create-user
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.CreateRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "408":
          description: Request Timeout
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: Create user
      tags:
      - users
  /api/user/{email}:
    get:
      consumes:
      - application/json
      description: Get a user by their Email.
      operationId: get-user-by-email
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: Get user by Email
      tags:
      - users
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user.
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user by their ID.
      operationId: get-user-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user.
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: Update user
      tags:
      - users
schemes:
- http
swagger: "2.0"
